/* -*- coding: utf-8 -*-
 * ----------------------------------------------------------------------
 * Copyright Â© 2012, RedJack, LLC.
 * All rights reserved.
 *
 * Please see the LICENSE.txt file in this distribution for license
 * details.
 * ----------------------------------------------------------------------
 */

#include <libcork/core.h>
#include <libcork/helpers/errors.h>

#include "swanson/metamodel.h"


_static_op_(swan_type, unref)
{
    struct swan_type  *type;
    assert(param_count == 1);
    rip_check(type = swan_value_to_type(&params[0]));
    free(type);
    swan_value_clear(&params[0]);
    return 0;
}

_simple_opset_(swan_type)
{
    get_static_op("~unref", swan_type, unref);
    return NULL;
}


int
swan_type_new(struct swan_value *dest, size_t instance_size,
              struct swan_opset *opset)
{
    struct swan_type  *content = cork_new(struct swan_type);
    content->instance_size = instance_size;
    content->opset = swan_opset_alias(opset);
    dest->representation = SWAN_REP_TYPE;
    dest->opset = simple_opset(swan_type);
    dest->content = content;
    return 0;
}


#define _type_(name, instance_size) \
_static_op_(name, type) \
{ \
    assert(param_count == 1); \
    assert(swan_value_is_empty(&params[0])); \
    return swan_type_new \
        (&params[0], instance_size, simple_opset(name##__type)); \
}
